name: Lint and Build
on:
  push:
    branches:
      - main
jobs:
  hadolint:
    name: hadolint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Run hadolint
        uses: hadolint/hadolint-action@v3.3.0
        with:
          dockerfile: Dockerfile
  dockerfmt:
    name: dockerfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Run dockerfmt
        run: ./tools/dockerfmt.sh -i 2 -n Dockerfile | diff -u Dockerfile -
  markdownlint:
    name: markdownlint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Run markdownlint
        run: ./tools/markdownlint.sh "*.md"
  rubocop:
    name: RuboCop
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Run RuboCop
        run: ./tools/rubocop.sh
  shellcheck:
    name: ShellCheck
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@master
  shfmt:
    name: shfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Run shfmt
        run: ./tools/shfmt.sh -l -d -i 2 -ci -bn ./*.sh tools/*.sh
  build:
    name: Build and Push
    runs-on: ubuntu-latest
    needs: [hadolint, dockerfmt, markdownlint, rubocop, shellcheck, shfmt]
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          build-args: SOURCE_COMMIT=${{ github.sha }}
          platforms: linux/amd64, linux/arm64
          push: true
          tags: |
            docker.io/shakiyam/bbs:latest
            ghcr.io/shakiyam/bbs:latest
  rspec:
    name: Test the application
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Create .env file
        run: ./generate_dotenv.sh
      - name: Start
        run: |
          ./tools/docker-compose-wrapper.sh up -d
          ./tools/wait-to-get-healthy.sh bbs-db
          ./tools/wait-to-get-healthy.sh bbs-web
      - name: Run rspec
        run: NETWORK=host ./tools/capybara.sh
